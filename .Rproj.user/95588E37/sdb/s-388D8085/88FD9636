{
    "contents" : "---\ntitle: Visualize Data in R \nsubtitle: graph types and interactivity to explore data \nauthor: Miguel Vazquez-Prada Baillet , miguelvb[at]yahoo.com\njob: Centre for Epidemiology and Screening , KU \nframework:  bootstrap #leapday minimal bootstrap io2012\nmode: selfcontained\next_widgets: {rCharts: [\"libraries/morris\",\"libraries/nvd3\", \"libraries/polycharts\", \"libraries/highcharts\" , \"libraries/leaflet\", \"libraries/rickshaw\", \"libraries/d3_sankey\" ]}\nhighlighter: highlight.js #highlight.js\nhitheme: github #twitter-bootstrap\ngithub: {user: miguelvb, repo: visualDataPresentation, branch: \"gh-pages\"}\n\n--- bg:#FFFFCC\n\n<style>\n\n</style>\n\n<a href=\"https://github.com/miguelvb/visualDataPresentation\"><img style=\"position: absolute; top: 0; right: 0; border: 0;\" src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\" alt=\"Fork me on GitHub\"></a>\n\n```{r echo = F, message = F, cache = F}\nrequire(rCharts)\nrequire(ggplot2)\nrequire(grid)\nrequire(ffbase)\nrequire(data.table)\n#options(RCHART_WIDTH = 600, RCHART_HEIGHT = 400)\nknitr::opts_chunk$set(comment = NA, results = 'asis', tidy = F, message = F, warning = F, cache = F)\n```\n\n## Visualize Data \n\n<br/>\n\n> **See it** , that is the question...   \n\n\nBeing able to \"see\" our data is one of the best techniques we can have to understand, communicate and analize them.   \n<br/><br/>\n\n**R** gives the opportunity to create many graphical representations.      \n\n<br/>\n\nIn the last years there has been a *revolution* in data visualization, that bring new possibilities to display and interact with data. \n\n--- bg:#FFFFCC\n## Why display data \n\n<br/>\n\n> 1. To communicate. \n> 2. To explore. \n> 3. To analyze. \n> 4. To discover. \n\n\n---\n### The usual suspects\n\n<center> ![types of plots](figures/plots.png) </center>\n\n--- bg:#FFFFCC\n\n## GGPLOT 2 \n\n> The ggplot2 package, created by Hadley Wickham, offers a powerful graphics language for creating elegant and complex plots. \n> It is unlike most other graphics packages because it has a deep underlying grammar.\n\n---\n\nExample:  \n**Proportion of Danish women aged 50-69 years invited to mammography screening**\n\n```{r ggplot0, eval=F}\nx <- data.frame( years = factor(1990:2010, levels = 1990:2010) ,\n                 percent = c(0,4,8,8,14,rep(18,9), 23,24,18,19,48,89,100));\ntxt.perc <- function(x, d){ paste( format ( x, digits = 1, nsmall = d), \"%\", sep = \"\") }\ntitl <-'Proportion of Danish women aged 50-69 years \\ninvited to mammography screening'; \n\npl <- ggplot(x,aes(x=years, y=percent, fill = percent)) +    \n  \n  geom_bar( width =0.9) +  ylab('percent') + xlab('') +    \n  \n  geom_text(data=x,aes(x=years,y=percent,label=txt.perc(percent, 0)),vjust=-0.5, size = 4) +    \n  \n  geom_text(aes(x=nrow(x)/2,y=90,label= titl),vjust=-0.5) +   \n  \n  theme_bw() +\n  \n  scale_y_continuous( breaks=seq(0, 100, 5)  , limits = c(0, 110), expand = c(0,0) ) + \n  \n  theme( \n    axis.text.x= element_text( size= 12 ) , \n    legend.position = \"none\" ,\n    panel.margin = unit(0,\"null\")  \n  ) \n```\n---\n\n<center><img src=\"figures/percent.mammogrphy.png\" ></center>\n\n---\n\n## The usual suspects and more in R : ggplot2 \n\nMap example : \n\n```{r ggplot, eval=FALSE}\nm0 <- ggplot(data=MapDf)\nm1 <- m0 + \n      geom_path(aes(x=long, y=lat, group=group), color='gray') + \n      coord_equal() + \n      xlim(8,13) + \n      labs( title = \"Cancer Diagnoses in Denmark\")\n\nm2 <- m1 +  \n      geom_polygon(   aes(x=long, y=lat, group=group, fill=id), alpha = 0.5   ) \n\nmap <- m2 + \n       geom_text(data = centroids, x=centroids$long, y=centroids$lat, label = centroids$label, size = 2) +\n       coord_map(project=\"globular\") + \n       theme(legend.position = \"none\") \nmap\n```\n\n--- \n\n#### Denmark, cancer cases per region. \n\n![types of plots](figures/denmark_cases_2.png)\n\n---\n\n## More ggplot2 : heat map example  \n\n```{r ggplot2}\n# Make the heatmap : \nload(\"data/month_year\")\nc.scale <- scale_fill_gradient(low = \"white\", \n                                high = \"steelblue\",\n                               limits=c(min(month_year$freq),\n                                        max(month_year$freq)))\np1 <- ggplot(month_year, aes(month, year)) + \n  geom_tile(aes(fill = freq), color=\"white\") \np2 <- p1 + c.scale\n```\n\n--- \n```{r ggplot3}\np2\n```\n\n\n--- .notso bg:url(assets/img/bike_ggplot.png)\n\n\n## Not so usual plots and diagrams \nLondon Cycle Hire and Pollution, made with R and ggplot\n\n<img src=\"assets/img/bike_ggplot.png\" width=600 height=500 ></a>\n*see the post in [spatialy](http://spatialanalysis.co.uk/2012/02/london-cycle-hire-pollution/)* \n\n--- bg:#E6E6FA\n\n## Today's visualizations \n\n### To visualize \n\n> * large data \n> * complex data \n> * interactions\n> * data explorations \n\n### We use : \n\n> * new plots, diagrams, etc. \n> * interactivity \n> * real-time graphing\n> * animations \n> * 3D\n\n---\n\n<center><a href=\"https://github.com/mbostock/d3/wiki/Gallery\"><img src=\"assets/img/newplots_1.png\" ></a></center>\n\n---\n\n<center><a href=\"https://github.com/mbostock/d3/wiki/Gallery\"><img src=\"assets/img/newplots_2.png\" ></a></center>\n\n\n--- bg:#E6E6FA\n\n## But, How To in R !!?? \n\n**R** is a great tool to make modern visualizations. \n\nDue to its growing enthusiastic community, many packages and tutorials have been made to visualize data. \n\nHere, we will use mainly these packages : \n\n* [slidify](http://slidify.org) is an extremly powerful tool to convert any **Rmd** (R markdown) document to a beautiful and custom html5 presentation. This presentation is done with it. [slidify examples](http://ramnathv.github.io/slidifyExamples/)\n* [rCharts](https://github.com/ramnathv/rCharts). rCharts is an R package to create, customize and publish interactive javascript visualizations from R using a familiar lattice style plotting interface.\n* [Corrplot](https://github.com/taiyun/corrplot). Package corrplot is for visualizing a correlation matrix and\nconfidence interval. It also contains some algorithms to do matrix reordering.\n* [GoogleVis](http://decastillo.github.io/googleVis_Tutorial/)\n\n--- bg:#E6E6FA\n\n## R , d3.js HTML5 and javascript \n\nTo diplay and run the visualizations, one common procedure is use `HTML5` and `javascript`, to allow web access and manipulation. \n\nCombination of `rCharts`, `googleVis`, `ggplot2` , `d3.js` and custom programming will transform R in one of the best platforms to make `complex-interactive-animated` visualizations. \n\n\n\n--- .segue bg:indigo\n## EXAMPLES \n\n\n--- bg:#FFFFCC\n## Time plots, zooms....  \n\nLet us code an interactive graph: \n\n```{r timeplot}\nrequire(rCharts)\nload(\"data/time_data\")\nn1 <- nPlot(\n  N~dateint,\n  data =dtb ,\n  group = \"id\",  # even though only one series need to specify group\n  type = \"lineWithFocusChart\"\n)\nn1$xAxis(\n  tickFormat=\n    \"#!function(d) { return d3.time.format('%Y %b')(new Date( d )); }!#\"\n)\nn1$x2Axis(\n  tickFormat=\n    \"#!function(d) {return d3.time.format('%Y')(new Date( d ));}!#\"\n)\nn1$set( width = 700, height = 500)\n```\n---\n## Time plot of movements of screened women \n\n```{r, echo=FALSE}\nn1$print(\"chart_time\")\n```\n---\n\n## Sankey Diagrams  : \n\n```{r}\nset.seed(12)\nrequire(igraph)\nrequire(rCharts)\ng <- graph.tree(40, children = 4)\n\nE(g)$weight = 1\nedgelist <- get.data.frame(g) #this will give us a data frame with from,to,weight\ncolnames(edgelist) <- c(\"source\",\"target\",\"value\")\nedgelist$source <- as.character(edgelist$source)\nedgelist$target <- as.character(edgelist$target)\nsanPlot <- rCharts$new()\nsanPlot$setLib('libraries/widgets/d3_sankey')\nsanPlot$setTemplate(script = 'libraries/widgets/d3_sankey/layouts/deff.html')\nsanPlot$set(\n  data = edgelist,\n  nodeWidth = 15,\n  nodePadding = 10,\n  layout = 32,\n  width = 960,\n  height = 500\n)\n```\n\n---\n\n```{r , echo=FALSE}\nsanPlot$print()\n```\n\n--- \n\n## Hicharts \n\n```{r hi1}\nload(\"data/tabcancer\")\ntcancer <- as.data.frame(tabcancer)\nl.r2007  <- c(\"Hovedstaden\", \"Sjelland\",\"Syddanmark\", \"Midtjylland\", \"Nordjylland\")\nnames(tcancer) <- c(\"year\",\"region\", \"N\", \"time\")\ntcancer$region <- factor(tcancer$region, \n                         levels = levels(tcancer$region), labels = l.r2007 )\na <- hPlot(N ~ year, data = tcancer, type = \"bubble\", \n           title = \"Number of cancer cases by year and region (zoomable)\",\n           subtitle = \"sampled data (2e6 from 24e6)\", size = \"N\", group = \"region\")\na$chart(zoomType = \"xy\")\n```\n\n---\n\n```{r , echo=FALSE}\na$print('hichart1')\n```\n\n--- . segue bg:indigo\n\n## d3.js EXAMPLES \n\n--- \n\n## d3.js examples \n\n### Made with R code and d3.js examples \n\nDatabase: Sample of Cervical Screening Database (Denmark). \n\n* [ZOOMABLE BUBBLE] (d3s//bubble.html)\n* [ZOOMABLE BUBBLE NO SIZES](d3s/bubble_no_prop.html)\n* [INTERACTIVE TREE LAYOUT](d3s/tree_layout.html)\n* [ZOOMABLE TREE MAP](d3s/treemap.html)\n* [ZOOMABLE TREE MAP, NO SIZES](d3s/treemap_noprop.html)\n\n---\n\n## LINKS  \n\nGeneral: \n\n* [Showing results from Cox Proportional Hazard Models in R with simPH](http://www.r-bloggers.com/showing-results-from-cox-proportional-hazard-models-in-r-with-simph/)\n* [Graphs R CookBook](http://www.cookbook-r.com/Graphs/)\n* [How do you visualize too much data?](http://fellinlovewithdata.com/guides/how-do-you-visualize-too-much-data)\n* [Interactive charts and slides with R, googleVis and knitr](http://dl.dropboxusercontent.com/u/7586336/blogger/Cambridge_R_googleVis_with_knitr_and_RStudio_May_2012.html#%281%29)\n* [50 Best US Cities of 2012 ](http://glimmer.rstudio.com/vivekpatil/bb50citiesrank/). Link to code [here](https://github.com/patilv/bb50citiesrank)\n* [ds3.js](http://biovisualize.github.io/d3visualization/)\n\n* [openCPU](https://public.opencpu.org/). Scientific computing in the cloud. *For anyone, anywhere*.\n\n---\n##LINKS\n\nVideos: \n\n* [Drawing Dynamic Visualizations](http://vimeo.com/66085662)\n\nBLogs : \n\n* [**Taiyun Wei**. *About my work and thoughts*](http://weitaiyun.blogspot.dk/)\n\n---\n\n## LINKS\nR \n\n* [R Interactive Graphics with SVG](http://timelyportfolio.github.io/gridSVG_intro/)\n* [rCharts to d3-horizon] (http://timelyportfolio.github.io/rCharts_d3_horizon/#slide-1)\n* [rCharts](http://ramnathv.github.io/rCharts/)\n* [rCharts Gallery] (http://rcharts.io/gallery/)\n\n---\n## LINKS \n\nR packages : \n\n* [slidify](http://slidify.org) is an extremly powerful tool to convert any **Rmd** (R markdown) document to a beautiful and custom html5 presentation. This presentation is done with it. [slidify examples](http://ramnathv.github.io/slidifyExamples/)\n* [rCharts](https://github.com/ramnathv/rCharts). rCharts is an R package to create, customize and publish interactive javascript visualizations from R using a familiar lattice style plotting interface.\n* [iPlots](http://stats.math.uni-augsburg.de/iplots/). iPlots is a package which provides high interaction statistical graphics, written in Java.\n* [Corrplot](https://github.com/taiyun/corrplot). Package corrplot is for visualizing a correlation matrix and\nconfidence interval. It also contains some algorithms to do matrix reordering.\n* [GoogleVis tutorial](http://decastillo.github.io/googleVis_Tutorial/#1)\n\n---\n## LINKS\n\nD3 : \n\n* [D3 gallery](https://github.com/mbostock/d3/wiki/Gallery)\n* [D3.JS: DATA-DRIVEN DELIGHT](http://anna.ps/talks/fel/#/)\n* [D3 tutorials](http://alignedleft.com/tutorials/d3/)\n* [D3.js Gallery](http://biovisualize.github.io/d3visualization/)\n\n",
    "created" : 1380729315883.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3579630258",
    "id" : "88FD9636",
    "lastKnownWriteTime" : 1380729336,
    "path" : "P:/Projects/Github/visualDataPresentation/index_boostrap.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}